/**
 * Function
 *
 * @version			1.0.1
 *
 * @author			Aby Dahana
 * @profile			abydahana.github.io
 *
 * Property of Aksara Laboratory
 * www.aksaracms.com
 */

var UA												= ($(window).outerWidth() < 992 ? 'mobile' : 'desktop'),
	exception										= null,
	XFBML											= (typeof FB !== 'undefined' && typeof FB.XFBML !== 'undefined' ? FB.XFBML : null),
	prevScrollpos									= window.pageYOffset,
	_retrigger										= [];

/**
 * hide navbar on scroll down, restore on scroll up
 */
window.onscroll										= function()
{
	var currentScrollPos							= window.pageYOffset,
		navbar										= document.getElementById('hide-on-scroll');
		
	if(navbar && window.navigator.userAgent.indexOf('Trident/') === -1)
	{
		if(prevScrollpos > currentScrollPos)
		{
			navbar.style.top						= 0;
			navbar.nextElementSibling.style.top		= 0;
		}
		else if(currentScrollPos > navbar.offsetHeight)
		{
			navbar.style.top						= '-' + navbar.offsetHeight + 'px';
			navbar.nextElementSibling.style.top		= '-' + navbar.offsetHeight + 'px';
		}
		
		prevScrollpos								= currentScrollPos;
	}
};

/**
 * in_array_r
 * this mean to check item availability recursively
 *
 * @param	string	needle
 * @param	object	haystack
 * @param	bool	strict
 * @return	bool
 */
function in_array_r(needle, haystack, strict)
{
	var found										= false;
	$.each(haystack, function(key, item)
	{
		if((strict ? item === needle : item == needle) || ($.isArray(item) && in_array_r(needle, item, strict)))
		{
			found									= true;
		}
	});
	return found
}

/**
 * go_to
 * overtake the helper function from php to used in javascript
 *
 * @param	string	url
 * @param	object	params
 * @return	string
 */
function go_to(path, params)
{
	var url											= window.location.href.split(/[?#]/)[0],
		query_string								= {};
	$.each(params, function(key, val)
	{
		if(val)
		{
			query_string[key]						= val;
		}
	});
	
	if(Object.keys(query_string).length <= 1)
	{
		query_string								= null;
	}
	
	return url.replace(/\/$/, '') + (path ? '/' + path : '') + (query_string ? '?' + $.param(query_string) : '');
}

/**
 * get_query_string
 * get the query string value from url
 *
 * @param	string	keyword,
 * @param	string	url
 *
 * @return	string
 */
function get_query_string(keyword, url)
{
	if(!url)
	{
		/* no url set, use window location */
		url											= window.location;
	}
	else
	{
		url											= new URL(url);
	}
	
	/* extract parameter */
	var params										= new URLSearchParams(url.search);
	
	/* get query string value based on given keyword */
	return params.get(keyword);
}

/**
 * htmlspecialchars
 * rewrite PHP function to javascript format
 */
function htmlspecialchars(string)
{
	if(typeof(string) == "string")
	{
		string										= string.replace(/&/g, "&amp;")
		.replace(/"/g, "&quot;")
		.replace(/'/g, "&#039;")
		.replace(/</g, "&lt;")
		.replace(/>/g, "&gt;");
	}
	
	return string;
}

/**
 * rgb_to_hex
 * convert the rgb into hex
 */
function rgb_to_hex(rgb)
{
	if(!rgb) return;
	
	rgb												= rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
	return (rgb && rgb.length === 4 ? "#" + ("0" + parseInt(rgb[1],10).toString(16)).slice(-2) + ("0" + parseInt(rgb[2],10).toString(16)).slice(-2) + ("0" + parseInt(rgb[3],10).toString(16)).slice(-2) : '');
}

/**
 * rgba_to_hex
 * convert the rgba into hex
 */
function rgba_to_hex(rgba, a)
{
	var isPercent,
		rgb											= rgba.replace(/\s/g, '').match(/^rgba?\((\d+),(\d+),(\d+),?([^,\s)]+)?/i),
		alpha										= (rgb && rgb[4] || "").trim(),
		hex											= (rgb ? (rgb[1] | 1 << 8).toString(16).slice(1) + (rgb[2] | 1 << 8).toString(16).slice(1) + (rgb[3] | 1 << 8).toString(16).slice(1) : rgba);

	if(alpha !== '')
	{
		a											= alpha;
	}
	else
	{
		a											= 01;
	}
	
	a												= ((a * 255) | 1 << 8).toString(16).slice(1),
	hex												= hex;
	
	return hex;
}

/**
 * hex_to_rgba
 * convert the hex into rgba
 */
function hex_to_rgba(hex, a)
{
	if(!hex) return false;
	
	var c;
	if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex))
	{
		c											= hex.substring(1).split('');
		if(c.length== 3)
		{
			c										= [c[0], c[0], c[1], c[1], c[2], c[2]];
		}
		c											= '0x'+c.join('');
		
		return 'rgba(' + [(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + (a ? a : 1) + ')';
	}
	throw new Error('Bad Hex');
}

/**
 * jExec
 * execute the jQuery script inline the document
 */
function jExec(script)
{
	return script;
}

/**
 * throw_exception
 * Pop the message up
 */
function throw_exception(code, messages)
{
	if(!messages)
	{
		return false;
	}
	
	if($.inArray(code, [200, 301]) !== -1)
	{
		var color									= 'success',
			icon									= 'mdi mdi-check-circle-outline';
	}
	else if($.inArray(code, [403, 404]) !== -1)
	{
		var color									= 'warning',
			icon									= 'mdi mdi-alert-octagram-outline';
	}
	else
	{
		var color									= 'danger',
			icon									= 'mdi mdi-emoticon-sad-outline';
	}
	
	$('[data-bs-dismiss=toast]').trigger('click'),
	
	$('<div class="toast-container position-fixed bottom-0 end-0 p-3"><div class="toast align-items-center text-bg-' + color + ' fade show" role="alert" aria-live="assertive" aria-atomic="true"><div class="d-flex"><div class="toast-body"><div class="row align-items-center"><div class="col-2"><i class="' + icon + ' mdi-2x"></i></div><div class="col-10 text-break">' + messages + '</div></div></div><button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="' + (typeof phrase.close !== 'undefined' ? phrase.close : 'Close') + '"></button></div></div></div>').appendTo('body'),
	
	clearTimeout(exception);
	
	exception										= setTimeout(function()
	{
		$('[data-bs-dismiss=toast]').trigger('click')
	}, 5000)
}

/**
 * Autocomplete place search (require Google Maps API)
 */
var placeSearch,
	autocomplete,
	geocoder;

function initAutocomplete()
{
	if(!document.getElementById('autocomplete')) return;
	
	geocoder										= new google.maps.Geocoder();
	autocomplete									= new google.maps.places.Autocomplete
	(
		(document.getElementById('autocomplete')),
		{
			componentRestrictions:
			{
				country: 'id'
			},
			fields: ['formatted_address', 'geometry', 'name'],
			strictBounds: false,
			types: ['establishment']
		}
	),
	autocomplete.addListener('place_changed', fillInAddress)
}

function fillInAddress()
{
	var place										= autocomplete.getPlace();
	
	codeAddress(document.getElementById('autocomplete').value, document.getElementById('autocomplete').getAttribute('data-finder-url'))
}

function codeAddress(address, finder_url)
{
	geocoder.geocode
	({
		'address': address
	},
	function(results, status)
	{
		if(status == 'OK')
		{
			if(typeof draggableMarker !== 'undefined')
			{
				draggableMarker.getSource().getFeatures()[0].setGeometry(new ol.geom.Point(ol.proj.transform([results[0].geometry.location.lng(), results[0].geometry.location.lat()], projection, map.getView().getProjection()))),

				map.getView().fit(draggableMarker.getSource().getExtent(), map.getSize())
			}
			
			if(finder_url && typeof openlayers !== 'undefined')
			{
				$.ajax
				({
					url: finder_url,
					method: 'POST',
					data:
					{
						lat: results[0].geometry.location.lat(),
						lng: results[0].geometry.location.lng()
					},
					beforeSend: function()
					{
						openlayers.reset(),
						$('.preloader').remove(),
						$('[role=map]').append('<div class="absolute top right bottom left preloader"></div>')
					}
				})
				.done(function(response)
				{
					if(typeof response.url !== 'undefined')
					{
						openlayers.unzip(response, null, true)
					}
				})
			}
		}
		else
		{
			alert('Geocode was not successful for the following reason: ' + status);
		}
	})
}

function _response_template(_this, response, meta, back_btn)
{
	if(typeof response !== 'object')
	{
		$(config.content_placeholder).html
		(
			'<div class="container-fluid">' +
				'<div class="row bg-dark full-height">' +
					'<div class="col-12">' +
						'<div class="pt-3 pb-3 text-success font-monospace">' +
							'<p class="mb-0">' +
								'[info@localhost ~]# aksara trace -exception' +
							'</p>' +
							'<p class="mb-0 text-danger">' +
								(phrase.no_response_could_be_loaded ? phrase.no_response_could_be_loaded : 'No response could be loaded') +
								'<br />' +
								(phrase.make_sure_to_check_the_following_mistake ? phrase.make_sure_to_check_the_following_mistake : 'Make sure to check the following mistake') + ':' +
								'<ol class="text-danger">' +
									'<li>' +
										(phrase.module_structure ? phrase.module_structure : 'Module structure') + ',' +
									'</li>' +
									'<li>' +
										(phrase.incorrect_view_path ? phrase.incorrect_view_path : 'Incorrect view path') + ',' +
									'</li>' +
									'<li>' +
										(phrase.database_table_existence ? phrase.database_table_existence : 'Database table existence') + ',' +
									'</li>' +
									'<li>' +
										(phrase.something_caused_by_typo ? phrase.something_caused_by_typo : 'Somethiing caused by typo') + '.' +
									'</li>' +
								'</ol>' +
							'</p>' +
							'<p class="mb-0">' +
								'[info@localhost ~]# <blink>_</blink>' +
							'</p>' +
						'</div>' +
					'</div>' +
				'</div>' +
			'</div>'
		),
		$('[role=title]').text((phrase.error ? phrase.error : 'Error')),
		$('[role=icon]').removeAttr('class').addClass('mdi mdi-alert-outline'),
		$('#description-collapse').removeClass('show'),
		$('.full-height').css
		({
			minHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0))
		}),
		(UA === 'mobile' ? ($('html').removeClass('overflow-hidden'), $('body').removeClass('sidebar-expanded sidebar-hovered'), $('.navbar-toggler').not('.collapsed').trigger('click'), $('.navbar-collapse').removeClass('show').prev('.navbar-toggler').addClass('collapsed')) : null);
		
		return;
	}
	else if(typeof response.responseJSON !== 'undefined')
	{
		response									= response.responseJSON;
	}
	
	/* redirect */
	if(301 == response.status || (403 == response.status && response.target) || (404 == response.status && response.target))
	{
		/* redirect if needed */
		if(response.redirect)
		{
			return window.location.replace(response.target)
		}
		
		/* throw exception */
		throw_exception(response.status, response.message),
		
		/* or load target page instead */
		$.ajax
		({
			method: 'POST',
			context: this,
			url: response.target,
			data:
			{
				prefer: (_this.attr('data-prefer-result') ? _this.attr('data-prefer-result') : (UA === 'mobile' ? 'html' : null))
			},
			beforeSend: function(progress)
			{
				/* additional command if any */
			},
			complete: function(progress)
			{
				/* additional command if any */
			},
			statusCode:
			{
				301: function(new_response, status, error)
				{
					_response_template(_this, new_response, meta)
				},
				403: function(new_response, status, error)
				{
					_response_template(_this, new_response, meta)
				},
				404: function(new_response, status, error)
				{
					_response_template(_this, new_response, meta)
				},
				500: function(new_response, status, error)
				{
					/* throw log to console */
					$(config.content_placeholder).html
					(
						'<div class="container-fluid">' +
							'<div class="mt-3 mb-3 p-3 bg-dark">' +
								'<pre class="text-warning mb-0" style="white-space:pre-wrap">' +
									(typeof new_response.responseJSON !== 'undefined' ? JSON.stringify(new_response.responseJSON, null, 4) : (error ? error : (phrase.consider_to_check_your_internet_connection ? phrase.consider_to_check_your_internet_connection : 'Consider to check your internet connection'))) +
								'</pre>' +
							'</div>' +
						'</div>'
					),
					throw_exception(new_response.status, (error ? error : (phrase.consider_to_check_your_internet_connection ? phrase.consider_to_check_your_internet_connection : 'Consider to check your internet connection'))),
					$('[role=title]').text((phrase.error ? phrase.error : 'Error')),
					$('[role=icon]').removeAttr('class').addClass('mdi mdi-alert-outline'),
					$('#description-collapse').removeClass('show'),
					$('.modal').modal('hide'),
					$('body').css
					({
						cursor: 'default'
					})
				},
				501: function(new_response, status, error)
				{
					$(config.content_placeholder).html
					(
						'<div class="container-fluid">' +
							'<div class="row bg-dark full-height">' +
								'<div class="col-12">' +
									'<div class="pt-3 pb-3 text-success font-monospace">' +
										'<p class="mb-0">' +
											'[info@localhost ~]# aksara trace -exception' +
										'</p>' +
										'<p class="mb-0 text-danger">' +
											(phrase.no_response_could_be_loaded ? phrase.no_response_could_be_loaded : 'No response could be loaded') +
											'<br />' +
											(phrase.make_sure_to_check_the_following_mistake ? phrase.make_sure_to_check_the_following_mistake : 'Make sure to check the following mistake') + ':' +
											'<ol class="text-danger">' +
												'<li>' +
													(phrase.module_structure ? phrase.module_structure : 'Module structure') + ',' +
												'</li>' +
												'<li>' +
													(phrase.incorrect_view_path ? phrase.incorrect_view_path : 'Incorrect view path') + ',' +
												'</li>' +
												'<li>' +
													(phrase.database_table_existence ? phrase.database_table_existence : 'Database table existence') + ',' +
												'</li>' +
												'<li>' +
													(phrase.something_caused_by_typo ? phrase.something_caused_by_typo : 'Somethiing caused by typo') + '.' +
												'</li>' +
											'</ol>' +
										'</p>' +
										'<p class="mb-0">' +
											'[info@localhost ~]# <blink>_</blink>' +
										'</p>' +
									'</div>' +
								'</div>' +
							'</div>' +
						'</div>'
					),
					$('[role=title]').text((phrase.error ? phrase.error : 'Error')),
					$('[role=icon]').removeAttr('class').addClass('mdi mdi-alert-outline'),
					$('#description-collapse').removeClass('show'),
					$('.full-height').css
					({
						minHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0))
					}),
					(UA === 'mobile' ? ($('html').removeClass('overflow-hidden'), $('body').removeClass('sidebar-expanded sidebar-hovered'), $('.navbar-toggler').not('.collapsed').trigger('click'), $('.navbar-collapse').removeClass('show').prev('.navbar-toggler').addClass('collapsed')) : null);
					
					return;
				}
			}
		})
		.done(function(new_response)
		{
			_response_template(_this, new_response, meta)
		})
	}
	
	/* throw exception */
	else if(403 == response.status || 404 == response.status)
	{
		/* check if the clicked element not showing the working progress */
		if(_this.hasClass('show-progress'))
		{
			/* stop the progress indicator from the clicked element */
			if(_this.find('i.--mdi-working').length)
			{
				/* revert to previous icon */
				_this.find('i.--mdi-working').removeAttr('class').addClass(meta.btn_icon)
			}
		}
		
		$('[role=title]').text(' ' + meta.title),
		$('[role=icon]').removeAttr('class').addClass(meta.icon),
		$('.mdi').removeClass('mdi-spin'),
		throw_exception(response.status, response.message)
	}
	else
	{
		if(typeof response._token !== 'undefined')
		{
			sessionStorage.setItem('_token', response._token)
		}
		
		if(typeof response.meta !== 'undefined' && response.meta.segmentation !== 'undefined')
		{
			var segmentation						= '',
				segmentation_backup					= '',
				count								= 0;
			
			$.each(response.meta.segmentation, function(key, val)
			{
				segmentation						+= (segmentation ? '_' : '') + val;
				segmentation_backup					+= (segmentation_backup ? '|' : '') + val;
				
				count++;
			});
			
			if(segmentation && $('[data-segmentation=' + segmentation + ']').length)
			{
				$('ul').find('li').removeClass('active'),
				$('[data-segmentation=' + segmentation + ']').parents('li').addClass('active')
			}
			else
			{
				for(var i = 0; i < count; i++)
				{
					if(segmentation_backup)
					{
						segmentation_backup			= segmentation_backup.substr(0, segmentation_backup.lastIndexOf('|'));
						
						if(segmentation_backup && $('[data-segmentation=' + segmentation_backup.replaceAll('|', '_') + ']').length)
						{
							$('[data-segmentation=' + segmentation_backup.replaceAll('|', '_') + ']').parents('li').addClass('active');
							
							break;
						}
					}
				}
			}
		}
		
		/* check if the response is contain a exception message */
		if(typeof response.message !== 'undefined')
		{
			/* stop the progress indicator from the clicked element */
			if(_this.find('i.--mdi-working').length)
			{
				/* revert to previous icon */
				_this.find('i.--mdi-working').removeAttr('class').addClass(meta.btn_icon)
			}
			
			/* replace title, icon and description */
			$('[role=title]').text(' ' + meta.title),
			$('[role=icon]').removeAttr('class').addClass(meta.icon),
			$('.modal').modal('hide');
			
			/* finally, throw the exception */
			return throw_exception(response.status, response.message)
		}
		else if(!_this.hasClass('--prevent-modify'))
		{
			/* push to browser tab title */
			document.title							= (typeof response.meta !== 'undefined' && typeof response.meta.title !== 'undefined' ? response.meta.title : (phrase.error ? phrase.error : 'Error')) + ' | ' + config.app_name,
			
			/* store into browser history */
			(!back_btn ? history.pushState({path: response.current_page}, response.meta.title, response.current_page) : null),
			
			/* display the html result into page wrapper */
			$(config.content_placeholder).html((!response.html && typeof response.results !== 'undefined' && typeof response.results.table_data !== 'undefined' ? component.table(response) : (!response.html && typeof response.results !== 'undefined' && typeof response.results.form_data !== 'undefined' ? ('read' == response.method ? component.view(_this, response) : component.form(_this, response)) : response.html))),
			
			/* replace title, icon and description */
			$('[role=title]').text(' ' + response.meta.title),
			$('[role=icon]').removeAttr('class').addClass(response.meta.icon),
			$('#refresh-btn').attr('href', (response.current_page ? response.current_page : _this.attr('href')));
			if(response.meta.description)
			{
				$('#description-btn').removeClass('d-none'),
				$('#description-collapse').html(response.meta.description).addClass('show')
			}
			else
			{
				$('#description-btn').addClass('d-none'),
				$('#description-collapse').html('').removeClass('show')
			}
			
			/* add the breadcrumb */
			component.breadcrumb(response.breadcrumb),

			/* reset the body position to top */
			$('html, body').animate
			({
				scrollTop: 0
			}, 200)
		}
		
		/* reactivate the plugin */
		_reactivate()
	}
}

/**
 * _reactivate
 *
 * because this website is adopt SPA concept, sometime it's
 * require to re-trigger the plugins
 */
function _reactivate(_self_ignore)
{
	/**
	 * alert user if they using unstable browser
	 */
	if($('input[type=file]').length)
	{
		var ua										= navigator.userAgent || navigator.vendor || window.opera;
		if(ua.toLowerCase().indexOf('fban') > -1 || ua.toLowerCase().indexOf('fbav') > -1 || ua.toLowerCase().indexOf('instagram') > -1)
		{
			alert((phrase.your_browser_might_experiences_problem_related_to_file_reading_permissions_on_your_device ? phrase.your_browser_might_experiences_problem_related_to_file_reading_permissions_on_your_device : 'This browser might experience problems related to file reading permissions on your device.'))
		}
	}
	
	if($('.full-height').length)
	{
		$('.full-height').css
		({
			minHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0))
		})
	}
	
	/**
	 * detect if device browser is mobile
	 */
	if(UA != 'mobile')
	{
		/* scrollable sidebar */
		$('#sidebar-wrapper').mCustomScrollbar
		({
			autoHideScrollbar: true,
			axis: 'y',
			scrollInertia: 200,
			setHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0)),
			updateOnContentResize: true
		}),
		
		/* scrollable table (index of CRUD) */
		$('.alias-table-index').mCustomScrollbar
		({
			autoHideScrollbar: true,
			axis: 'yx',
			scrollInertia: 200,
			setWidth: $(window).outerWidth(true) - ($('#sidebar-wrapper').outerWidth(true) + 24),
			setHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-table-toolbar').length ? $('.alias-table-toolbar').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0)),
			updateOnContentResize: true
		}),
		
		/* scrollable table (index of CRUD) */
		$('.alias-grid-container').mCustomScrollbar
		({
			autoHideScrollbar: true,
			axis: 'yx',
			scrollInertia: 200,
			setHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-table-toolbar').length ? $('.alias-table-toolbar').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0)),
			updateOnContentResize: true
		})
	}
	
	/**
	 * sometime the component need to be resolve when the
	 * browser window is resized
	 */
	$(window).on('resize', function()
	{
		/**
		 * check again the device browser
		 */
		if(UA != 'mobile')
		{
			/* applied only for non-mobile browser */
			
			/* sidebar */
			$('#sidebar-wrapper').height($(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0))),
			
			/* index table */
			$('.alias-table-index').width($(window).outerWidth(true) - ($('#sidebar-wrapper').outerWidth(true) + 24)).height($(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-table-toolbar').length ? $('.alias-table-toolbar').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0))),
			
			$('.full-height').css
			({
				minHeight: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-description-collapse').length ? $('.alias-description-collapse').outerHeight(true) : 0) + ($('.alias-pagination').length ? $('.alias-pagination').outerHeight(true) : 0))
			})
		}
	})
	.on('scroll', function(e)
	{
		if($('.navbar').first().next('#content-wrapper').children('.carousel').length || $('.navbar').first().next('#content-wrapper').children('.leading').length)
		{
			var element								= ($('.navbar').first().next('#content-wrapper').children('.carousel').length ? $('.navbar').first().next('#content-wrapper').children('.carousel') : ($('.navbar').first().next('#content-wrapper').children('.leading').length ? $('.navbar').first().next('#content-wrapper').children('.leading') : null)),
				toe									= element.offset().top,
				boe									= element.offset().top + element.outerHeight(),
				bos									= $(window).scrollTop() + $(window).innerHeight(),
				tos									= $(window).scrollTop();

			if((bos > toe) && (tos < boe) && !$('body').hasClass('sidebar-expanded'))
			{
				$('.navbar').first().addClass('bg-transparent')
			}
			else
			{
				$('.navbar').first().removeClass('bg-transparent')
			}
		}
	}),
	
	/**
	 * focus to first field, expect there's modal open. to trigger focus the field inside modal, check the correspondent of shown.bs.modal from the global.min.js
	 */
	($(':input').blur(), (UA != 'mobile' ? ($('form.--validate-form').find('.autofocus').length ? $('form.--validate-form').find('.autofocus').focus() : $('form.--validate-form').find(':input.form-control:not([readonly]):enabled:visible:first').focus()) : null)),
	
	/**
	 * expand sidebar if it autocollapsed in previous request
	 */
	(UA != 'mobile' && $('body').hasClass('sidebar-collapsed auto-collapse') ? $('body').removeClass('sidebar-collapsed auto-collapse sidebar-hovered') : null),
	
	/**
	 * disable input autocomplete
	 */
	$('input, textarea').attr('autocomplete', 'off'),
	$('input[type=password]').attr('autocomplete', 'new-password'),
	
	/**
	 * remove the DOM's element that used before
	 */
	(UA === 'mobile' ? ($('html').removeClass('overflow-hidden'), $('body').removeClass('sidebar-expanded sidebar-hovered'), $('.navbar-toggler').not('.collapsed').trigger('click'), $('.navbar-collapse').removeClass('show').prev('.navbar-toggler').addClass('collapsed')) : null),
	$('.dcalendarpicker, #sortableListsBase, .autocomplete-suggestions, .note-popover').remove(),
	
	/**
	 * reload tooltip and popover
	 */
	$('[data-bs-toggle=tooltip]').tooltip(),
	$('[data-bs-toggle=popover]').popover(),
	
	/**
	 * dispose previous autocomplete element
	 */
	(typeof $.fn.autocomplete !== 'undefined' ? $('[role=autocomplete]').autocomplete('dispose') : ''),
	
	/**
	 * fix the hidden button that break the radius in button group
	 */
	($('.btn-group').find('.btn:hidden:first').nextAll('.btn:visible:first').length ? $('.btn-group').find('.btn:hidden:first').nextAll('.btn:visible:first').addClass('rounded-start') : $('.btn-group').find('.btn').not(':first').removeClass('rounded-start')),
	($('.btn-group').find('.btn:hidden:last').prevAll('.btn:visible:first').length ? $('.btn-group').find('.btn:hidden:last').prevAll('.btn:visible:first').addClass('rounded-end') : $('.btn-group').find('.btn').not(':last').removeClass('rounded-end')),
	
	/**
	 * make textarea autogrow
	 */
	$('textarea').each(function()
	{
		$(this).css
		({
			height: (this.scrollHeight > $(this).actual('outerHeight') ? (this.scrollHeight + 2) : $(this).actual('outerHeight')),
			overflowY: 'hidden'
		})
	})
	.on('input', function()
	{
		if(!$(this).hasClass('no-resize'))
		{
			this.style.height						= 'auto';
			this.style.height						= (this.scrollHeight + 2) + 'px';
		}
	}),
	
	/**
	 * select2 plugin
	 */
	$('select').each(function()
	{
		if($(this).next('.select2').length || $(this).hasClass('no-js')) return;
		
		var _length									= $(this).children('option').length;
		
		if($(this).attr('data-limit') && $(this).attr('data-href'))
		{
			var name								= $(this).attr('name'),
				href								= $(this).attr('data-href'),
				selected							= $(this).attr('data-selected');
			
			$(this).select2
			({
				ajax:
				{
					url: href,
					method: 'POST',
					data: function (params)
					{
						var query					=
						{
							search: params.term,
							page: params.page || 1,
							method: 'ajax_select',
							source: name,
							selected: selected
						};
						
						return query;
					}
				},
				width: ($(this).closest('.form-group').length ? $(this).closest('.form-group').actual('outerWidth') - ($(this).siblings('.input-group-text').length ? $(this).siblings('.input-group-text').actual('outerWidth') : 0) : $(this).actual('outerWidth')) - 1,
				placeholder: $(this).attr('placeholder'),
				dropdownCssClass: ($(this).hasClass('form-control-sm') ? 'select2-dropdown-sm' : ''),
				dropdownParent: $(this).parent(),
				minimumResultsForSearch: (_length > 10 || $(this).hasClass('with-searchbox') ? 0 : Infinity),
				templateSelection: function(response)
				{
					if(!$(response.element).data('icon'))
					{
						return response.text
					}
					return $('<span class="text-truncate"><i class="' + $(response.element).data('icon') + '"></i> ' + response.text + '</span>')
				},
				templateResult: function(response)
				{
					if(!$(response.element).data('icon'))
					{
						return response.text
					}
					return $('<span class="text-truncate"><i class="' + $(response.element).data('icon') + '"></i> ' + response.text + '</span>')
				}
			})
			.on('change', function(e)
			{
				var autosubmit						= ($(this).closest('form').attr('data-autosubmit') == 0 || $(this).closest('form').attr('data-autosubmit') == 'false' ? false : true);
				if(autosubmit && $(this).closest('form').hasClass('--xhr-form'))
				{
					$(this).closest('form.--xhr-form').trigger('submit')
				}
			})
		}
		else
		{
			$(this).select2
			({
				width: ($(this).closest('.form-group').length ? $(this).closest('.form-group').actual('outerWidth') - ($(this).siblings('.input-group-text').length ? $(this).siblings('.input-group-text').actual('outerWidth') : 0) : $(this).actual('outerWidth')) - 1,
				placeholder: $(this).attr('placeholder'),
				dropdownCssClass: ($(this).hasClass('form-control-sm') ? 'select2-dropdown-sm' : ''),
				dropdownParent: $(this).parent(),
				minimumResultsForSearch: (_length > 10 || $(this).hasClass('with-searchbox') ? 0 : Infinity),
				templateSelection: function(response)
				{
					if(!$(response.element).data('icon'))
					{
						return response.text
					}
					return $('<span class="text-truncate"><i class="' + $(response.element).data('icon') + '"></i> ' + response.text + '</span>')
				},
				templateResult: function(response)
				{
					if(!$(response.element).data('icon'))
					{
						return response.text
					}
					return $('<span class="text-truncate"><i class="' + $(response.element).data('icon') + '"></i> ' + response.text + '</span>')
				}
			})
			.on('change', function(e)
			{
				var autosubmit						= ($(this).closest('form').attr('data-autosubmit') == 0 || $(this).closest('form').attr('data-autosubmit') == 'false' ? false : true);
				if(autosubmit && $(this).closest('form').hasClass('--xhr-form'))
				{
					$(this).closest('form.--xhr-form').trigger('submit')
				}
			})
		}
	}),
	
	$('body').on('keyup', '.select2-search__field', function(e)
	{
		$('.select2-results').mCustomScrollbar('update')
	}),
	
	/**
	 * triggering mousewheel
	 */
    $('input[type=number]').bind('DOMMouseScroll mousewheel', function(e)
	{
		$(this).trigger('change')
    });
	
	/**
	 * trigger stopped carousel to slide
	 */
	if($('[data-ride=carousel]').length)
	{
		$('[data-ride=carousel]').carousel(),
		$('[data-ride=carousel]').bind('slide.bs.carousel')
	}
	
	/**
	 * load wysiwyg editor plugin
	 */
	if($('[role=wysiwyg]').length)
	{
		require.css([config.asset_url + 'summernote/summernote.min.css']),
		require.js([config.asset_url + 'summernote/summernote.min.js'], function()
		{
			$('[role=wysiwyg]').each(function()
			{
				if($(this).attr('disabled') || $(this).attr('readonly')) return;
				
				var _this							= $(this);
				
				$(this).summernote
				({
					dialogsInBody: true,
					dialogsFade: false,
					disableDragAndDrop: true,
					toolbar:
					[
						['style', ['bold', 'italic', 'underline']],
						['para', ['ul', 'ol', 'paragraph']],
						(UA !== 'mobile' ? ['insert', ['link', 'table', 'picture', 'video']] : null),
						(UA !== 'mobile' ? ['misc', ['clear', 'help']] : null)
					],
					placeholder: ($(this).attr('placeholder') ? $(this).attr('placeholder') : (phrase.your_content_goes_here ? phrase.your_content_goes_here : 'Your content goes here...')),
					disableResizeEditor: true,
					callbacks:
					{
						onDialogShown: function(e)
						{
							$('.modal-dialog').addClass('modal-dialog-centered'),
							$('.form-control-file').addClass('form-control')
						},
						onImageUpload: function(image)
						{
							var data				= new FormData();
							data.append("image", image[0]);
							$.ajax
							({
								url: config.base_url + 'xhr/summernote/upload',
								contentType: false,
								processData: false,
								data: data,
								method: 'POST',
								beforeSend: function()
								{
								},
								success: function(response)
								{
									_this.summernote('insertImage', response.source)
								}
							})
						},
						onMediaDelete: function(image)
						{
							$.ajax
							({
								url: config.base_url + 'xhr/summernote/delete',
								method: 'POST',
								data:
								{
									source: image[0].src
								}
							})
						}
					}
				})
			})
		})
	}
	
	/**
	 * load swiperJS
	 */
	if($('.swiper').length)
	{
		require.css([config.asset_url + 'swiper/swiper-bundle.min.css']),
		require.js([config.asset_url + 'swiper/swiper-bundle.min.js'], function()
		{
			$('.swiper').each(function()
			{
				var _this							= $(this),
					_unique							= Math.floor(Math.random() * 9999),
					_autoplay						= (1 == _this.attr('data-autoplay') || 'true' == _this.attr('data-autoplay') ? true : false);
				
				_this.addClass('swiper_' + _unique);
				
				if(typeof _this.attr('data-pagination') !== 'undefined')
				{
					$('<div class="swiper-pagination swiper-pagination_' + _unique + '"></div>').appendTo(_this)
				}
				
				if(typeof _this.attr('data-navigation') !== 'undefined')
				{
					$('<div class="swiper-button-prev"></div><div class="swiper-button-next"></div>').appendTo(_this)
				}
				
				if(_autoplay)
				{
					_autoplay						= 
					{
						delay: (typeof _this.attr('data-delay') !== 'undefined' ? parseInt(_this.attr('data-delay')) : 3000),
						pauseOnMouseEnter: true,
						disableOnInteraction: false
					};
				}
				
				var swiper							= new Swiper('.swiper_' + _unique,
				{
					watchSlidesProgress: true,
					autoplay: _autoplay,
					spaceBetween: (typeof _this.attr('data-space-between') !== 'undefined' ? parseInt(_this.attr('data-space-between')) : 15),
					slidesPerView: (typeof _this.attr('data-slide-count') !== 'undefined' ? parseInt(_this.attr('data-slide-count')) : 'auto'),
					breakpoints:
					{
						640:
						{
							slidesPerView: (typeof _this.attr('data-slide-count-sm') !== 'undefined' ? _this.attr('data-slide-count-sm') : (typeof _this.attr('data-slide-count') !== 'undefined' ? parseInt(_this.attr('data-slide-count')) : 'auto')),
							spaceBetween: (typeof _this.attr('data-space-between') !== 'undefined' ? parseInt(_this.attr('data-space-between')) : 15)
						},
						768:
						{
							slidesPerView: (typeof _this.attr('data-slide-count-md') !== 'undefined' ? _this.attr('data-slide-count-md') : (typeof _this.attr('data-slide-count-sm') !== 'undefined' ? _this.attr('data-slide-count-sm') : (typeof _this.attr('data-slide-count') !== 'undefined' ? parseInt(_this.attr('data-slide-count')) : 'auto'))),
							spaceBetween: (typeof _this.attr('data-space-between') !== 'undefined' ? parseInt(_this.attr('data-space-between')) : 15)
						},
						1024:
						{
							slidesPerView: (typeof _this.attr('data-slide-count-lg') !== 'undefined' ? _this.attr('data-slide-count-lg') : (typeof _this.attr('data-slide-count-md') !== 'undefined' ? _this.attr('data-slide-count-md') : (typeof _this.attr('data-slide-count-sm') !== 'undefined' ? _this.attr('data-slide-count-sm') : (typeof _this.attr('data-slide-count') !== 'undefined' ? parseInt(_this.attr('data-slide-count')) : 'auto')))),
							spaceBetween: (typeof _this.attr('data-space-between') !== 'undefined' ? parseInt(_this.attr('data-space-between')) : 15)
						},
						1280:
						{
							slidesPerView: (typeof _this.attr('data-slide-count-xl') !== 'undefined' ? _this.attr('data-slide-count-xl') : (typeof _this.attr('data-slide-count-lg') !== 'undefined' ? _this.attr('data-slide-count-lg') : (typeof _this.attr('data-slide-count-md') !== 'undefined' ? _this.attr('data-slide-count-md') : (typeof _this.attr('data-slide-count-sm') !== 'undefined' ? _this.attr('data-slide-count-sm') : (typeof _this.attr('data-slide-count') !== 'undefined' ? parseInt(_this.attr('data-slide-count')) : 'auto'))))),
							spaceBetween: (typeof _this.attr('data-space-between') !== 'undefined' ? parseInt(_this.attr('data-space-between')) : 15)
						}
					},
					pagination:
					{
						el: '.swiper-pagination_' + _unique,
						clickable: true
					},
					navigation:
					{
						prevEl: '.swiper-button-prev',
						nextEl: '.swiper-button-next'
					}
				})
			})
		})
	}
	
	/**
	 * load video player (mediaelement.js)
	 */
	if($('[role=videoplayer]').length)
	{
		require.css([config.asset_url + 'mediaelement/mediaelement.min.css']),
		require.js([config.asset_url + 'mediaelement/mediaelement.min.js'], function()
		{
			$('[role=videoplayer]').mediaelementplayer
			({
				autoplay: true,
				enableKeyboard: false,
				pauseOtherPlayers: false,
				toggleCaptionsButtonWhenOnlyOne: true,
				stretching: 'fill',
				success: function (player, node)
				{
					player.pause()
				}
			})
		})
	}
	
	/**
	 * load datepicker plugin
	 */
	if($('[role=datepicker]').length)
	{
		$('input[role=datepicker]').each(function()
		{
			$(this).datepicker
			({
				format: ($(this).attr('data-format') ? $(this).attr('data-format') : 'yyyy-mm-dd'),
				autoclose: true,
				zIndexOffset: 1090
			})
			.on('changeDate', function(e)
			{
			})
		})
	}
	
	/**
	 * load datetimepicker plugin
	 */
	if($('[role=datetimepicker]').length)
	{
		require.css([config.asset_url + 'datetimepicker/datetimepicker.min.css']),
		require.js([config.asset_url + 'moment/moment.min.js', config.asset_url + 'datetimepicker/datetimepicker.min.js'], function()
		{
			$('[role=datetimepicker]').each(function()
			{
				$(this).attr('readonly', true),
				$(this).datetimepicker
				({
					allowInputToggle: true,
					ignoreReadonly: true,
					showClose: true,
					showTodayButton: true,
					format: 'DD MMMM YYYY HH:mm:ss'
				})
			})
		})
	}
	
	/**
	 * load datetimepicker plugin
	 */
	if($('[role=calendar]').length)
	{
		require.css([config.asset_url + 'fullcalendar/fullcalendar.min.css']),
		require.js([config.asset_url + 'fullcalendar/fullcalendar.min.js'], function()
		{
			$('[role=calendar]').each(function()
			{
				var _this							= $(this);
				var calendar						= new FullCalendar.Calendar(document.getElementById(_this.attr('id')),
				{
					timeZone: 'GMT',
					slotMinTime: (_this.attr('data-start-time') ? _this.attr('data-start-time') : '08:00:00'),
					slotMaxTime: (_this.attr('data-start-time') ? _this.attr('data-start-time') : '22:00:00'),
					height: $(window).outerHeight(true) - (($('.navbar').length ? $('.navbar').outerHeight(true) : 0) + ($('#breadcrumb-wrapper').length ? $('#breadcrumb-wrapper').outerHeight(true) : 0) + ($('.alias-table-header').length ? $('.alias-table-header').outerHeight(true) : 0) + ($('.alias-table-toolbar').length ? $('.alias-table-toolbar').outerHeight(true) : 60) + 32),
					initialView: 'timeGridWeek',
					headerToolbar:
					{
						left: 'prev,next',
						center: 'title',
						right: 'dayGridMonth,timeGridWeek,timeGridDay'
					},
					events:
					{
						url: _this.attr('data-event-url'),
						method: 'POST'
					},
					selectable: (_this.attr('data-crud-url') ? true : false),
					select: function(info)
					{
						if(_this.attr('data-crud-url'))
						{
							$.ajax
							({
								url: _this.attr('data-crud-url'),
								method: 'POST',
								context: this,
								data:
								{
									start: info.startStr,
									finish: info.endStr,
									prefer: 'modal'
								},
								beforeSend: function()
								{
									/* fire modal to show */
									$(
										'<div class="modal" id="form-modal" data-bs-backdrop="static" data-bs-keyboard="true" role="dialog" aria-labelledby="form-modal-title" aria-hidden="true">' +
											'<div class="modal-dialog modal-dialog-centered" role="document">' +
												'<form action="' + _this.attr('href') + '" method="POST" class="modal-content" enctype="multipart/form-data">' +
													'<div class="modal-header">' +
														'<h5 class="modal-title" id="form-modal-title">' +
															'<i class="mdi mdi-loading mdi-spin"></i> ' +
															'<span class="modal-title-text">' +
																(phrase.loading ? phrase.loading : 'Loading...') +
															'</span>' +
														'</h5>' +
														'<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="' + (phrase.close ? phrase.close : 'Close') + '"></button>' +
													'</div>' +
													'<div class="modal-body">' +
														'<div class="d-flex justify-content-center">' +
															'<div class="spinner-border text-primary" role="status">' +
																'<span class="visually-hidden">' + (phrase.loading ? phrase.loading : 'Loading...') + '</span>' +
															'</div>' +
														'</div>' +								
													'</div>' +
													'<div class="modal-footer">' +
														'<button type="button" class="btn btn-light mr-1" data-bs-dismiss="modal">' +
															(phrase.close ? phrase.close : 'Close') +
															' <em class="text-sm">(esc)</em>' +
														'</button>' +
														'<button type="submit" class="btn btn-primary disabled" disabled>' +
															'<i class="mdi mdi-check"></i> ' +
															(phrase.submit ? phrase.submit : 'Submit') +
															' <em class="text-sm">(ctrl+s)</em>' +
														'</button>' +
													'</div>' +
												'</form>' +
											'</div>' +
										'</div>'
									)
									.appendTo('body')
									.modal('show', {backdrop:'static', keyboard: false})
								}
							})
							.done(function(response)
							{
								return component.templates(response, response.method, '#form-modal')
							})
						}
					}
				});
				
				calendar.render()
			})
		})
	}
	
	/**
	 * load price format plugin
	 */
	if($('[role=price]').length)
	{
		require.js([config.asset_url + 'price/price.min.js'], function()
		{
			$('[role=price]').autoNumeric()
		}),
		$('[role=price]').on('focus', function(e)
		{
			$(this).select()
		})
	}
	
	/**
	 * uploader plugin
	 */
	if($('[role=uploader]').length)
	{
		$('[role=uploader]').each(function()
		{
			var _this								= $(this);
			var files								= [];
			
			try
			{
				files								= JSON.parse(_this.attr('data-fileuploader-files'));
			}
			catch (e)
			{
			}
			
			_this.removeAttr('data-fileuploader-files');
			
			if(files)
			{
				$.each(files, function(key, val)
				{
					var extension					= val.name.substr((val.name.lastIndexOf('.')));
					
					$('<div class="row uploader-list mb-2 align-items-center"><div class="col-2 pe-0"><a href="' + val.url + '" target="_blank" download="' + val.name + '">' + (val.icon ? '<img src="' + val.icon + '" class="img-fluid rounded" style="max-height:32px" />' : '<button type="button" class="btn btn-primary pe-2 ps-2">' + extension + '</button>') + '</a></div><div class="col-10 position-relative"><button type="button" class="btn btn-sm position-absolute end-0 me-2" onclick="jExec($(this).closest(\'.form-group\').find(\'.custom-file-label\').text(($(this).closest(\'.form-group\').find(\'textarea\').length - 1) + \' \' + (($(this).closest(\'.form-group\').find(\'textarea\').length - 1) > 1 ? (phrase.files_were_chosen ? phrase.files_were_chosen : \'files were chosen\') : (phrase.file_was_chosen ? phrase.file_was_chosen : \'file was chosen\'))),$(\'[data-bs-toggle=tooltip]\').tooltip(\'hide\'),$(this).closest(\'.uploader-list\').remove())" data-bs-toggle="tooltip" title="' + (phrase.remove ? phrase.remove : 'Remove') + '"><i class="mdi mdi-delete text-danger"></i></button><textarea name="' + _this.attr('data-name').replace('[]', '') + '_label[' + val.file + ']" class="form-control form-control-sm" rows="1">' + val.name + '</textarea></div></div>').insertBefore(_this.closest('.uploader-input'))
				}),
				
				_this.next('.custom-file-label').text(files.length + ' ' + (files.length > 1 ? (phrase.files_were_chosen ? phrase.files_were_chosen : 'files were chosen') : (phrase.file_was_chosen ? phrase.file_was_chosen : 'file was chosen'))),
				
				$('[data-bs-toggle=tooltip]').tooltip()
			}
			
			_this.off('change.uploader'),
			_this.on('change.uploader', function(e)
			{
				/* prevent browser to take place as well */
				e.preventDefault();
				
				var _this							= $(this);
				
				if(this.files && this.files[0])
				{
					var file						= this.files[0];
					var extension					= file.name.substr((file.name.lastIndexOf('.')));
					
					if(_this.attr('accept') && $.inArray(extension, _this.attr('accept').split(',')) === -1)
					{
						return throw_exception(403, (phrase.allowed_file_type ? phrase.allowed_file_type : 'Allowed file type') + ' <b>' + _this.attr('accept') + '</b>.');
					}
					else if((file.size / 1024) > config.max_upload_size)
					{
						return throw_exception(403, file.name + ' ' + (phrase.is_too_large ? phrase.is_too_large : 'is too large!'));
					}
					
					var reader						= new FileReader;
					
					reader.readAsDataURL(this.files[0]);
					
					reader.onload					= function(response)
					{
						if(!response.target.error)
						{
							if(!_this.attr('multiple'))
							{
								/* remove previous selected file for non-multiple input */
								_this.closest('.uploader-input').prev('.uploader-list').remove()
							}
							
							$('<div class="row uploader-list mb-2 align-items-center"><div class="col-2 pe-0"><a href="' + response.target.result + '" target="_blank" download="' + file.name + '">' + ($.inArray(extension, ['.jpg', '.jpeg', '.png', '.gif']) !== -1 ? '<img src="' + response.target.result + '" class="img-fluid rounded" style="max-height:32px" />' : '<button type="button" class="btn btn-primary pe-2 ps-2">' + extension + '</button>') + '</a></div><div class="col-10 position-relative uploader-file-input"><button type="button" class="btn btn-sm position-absolute end-0 me-2" onclick="jExec($(this).closest(\'.form-group\').find(\'.custom-file-label\').text(($(this).closest(\'.form-group\').find(\'textarea\').length - 1) + \' \' + (($(this).closest(\'.form-group\').find(\'textarea\').length - 1) > 1 ? (phrase.files_were_chosen ? phrase.files_were_chosen : \'files were chosen\') : (phrase.file_was_chosen ? phrase.file_was_chosen : \'file was chosen\'))),$(\'[data-bs-toggle=tooltip]\').tooltip(\'hide\'),$(this).closest(\'.uploader-list\').remove())" data-bs-toggle="tooltip" title="' + (phrase.remove ? phrase.remove : 'Remove') + '"><i class="mdi mdi-delete text-danger"></i></button><textarea name="' + _this.attr('data-name').replace('[]', '') + '_label[]" class="form-control form-control-sm" rows="1">' + file.name + '</textarea></div></div>').insertBefore(_this.closest('.uploader-input')),
							
							_this.clone().attr('name', _this.attr('data-name')).css('display', 'none').removeAttr('data-name role class id').appendTo(_this.closest('.uploader-input').prev('.uploader-list').find('.uploader-file-input')),
							
							_this.next('.custom-file-label').text(_this.closest('.form-group').find('textarea').length + ' ' + (_this.closest('.form-group').find('textarea').length > 1 ? (phrase.files_were_chosen ? phrase.files_were_chosen : 'files were chosen') : (phrase.file_was_chosen ? phrase.file_was_chosen : 'file was chosen'))),
							
							$('[data-bs-toggle=tooltip]').tooltip()
						}
					};
				}
			})
		})
	}
	
	/**
	 * checkbox
	 */
	if($('[role=checker]').length)
	{
		$('[role=checker]').each(function()
		{
			var _parent								= $(this).attr('data-parent');
			if($(this).closest(_parent).find(':checkbox.checker-children:checked').length)
			{
				$(this).prop('checked', true)
			}
			else
			{
				$(this).prop('checked', false)
			}
		})
	}
	
	/**
	 * autocomplete plugin
	 */
	if($('[role=autocomplete]').length)
	{
		$('[role=autocomplete]').each(function()
		{
			var _this								= $(this);
			require.js([config.asset_url + 'autocomplete/autocomplete.min.js'], function()
			{
				_this.autocomplete
				({
					serviceUrl: (_this.attr('data-href') ? _this.attr('data-href') : _this.closest('form').attr('action')),
					params:
					{
						method: 'autocomplete',
						origin: _this.attr('name')
					},
					minChars: 3,
					zIndex: 1050,
					noSuggestionNotice: (phrase.nothing_found ? phrase.nothing_found : 'Nothing found'),
					triggerSelectOnValidInput: false,
					onSelect: function(suggestion)
					{
						if(typeof suggestion.target !== 'undefined' && suggestion.target)
						{
							/* create and click the temporary link */
							$('<a href="' + suggestion.target + '" class="--xhr"></a>').appendTo('body').trigger('click').remove()
						}
						else if(_this.closest('form').hasClass('--xhr-form'))
						{
							_this.closest('form.--xhr-form').trigger('submit')
						}
						else if(_this.hasClass('on-autocomplete-trigger'))
						{
							$('input[data-mask-input=autocomplete]').remove(),
							$('<input type="hidden" name="' + _this.attr('name') + '" value="' + suggestion.value + '" data-mask-input="autocomplete" />').insertAfter(_this)
						}
					},
					onSearchComplete: function(query, suggestion)
					{
						/* additional trigger on search complete */
					}
				})
			})
		})
	}
	
	/**
	 * fetch additional file to initialize openlayers map
	 */
	if($('[role=map]').length)
	{
		$('[role=map]').each(function()
		{
			var _this								= $(this);
			
			require.css([config.asset_url + 'openlayers/ol.min.css', config.asset_url + 'openlayers/ol-geocoder/ol-geocoder.min.css', config.asset_url + 'openlayers/ol-popup/ol-popup.min.css']),
			('google' == config.openlayers_search_provider ? require.js('https://maps.googleapis.com/maps/api/js?key=' + config.openlayers_search_key + '&libraries=places&language=' + config.language + '&callback=initAutocomplete') : ''),
			require.js([config.asset_url + 'openlayers/ol.min.js', config.asset_url + 'openlayers/ol-geocoder/ol-geocoder.min.js', config.asset_url + 'openlayers/ol-popup/ol-popup.min.js', config.asset_url + 'local/js/openlayers.min.js'], function()
			{
				if(typeof openlayers !== 'undefined')
				{
					openlayers.render(_this),
					$('.ol-zoom-in, .ol-zoom-out, .ol-zoom-extent button, .ol-track button, .ol-attribution button, .ol-rotate-reset button').tooltip
					({
						placement: 'right'
					})
				}
			})
		})
	}
	
	/**
	 * fetch additional file to initialize syntax highlighter
	 */
	if($('pre code').length)
	{
		require.css([config.asset_url + 'prism/prism.min.css']),
		require.js([config.asset_url + 'prism/prism.min.js'], function()
		{
			Prism.highlightAll()
		})
	}
	
	/**
	 * fetch additional file to initialize iconpicker
	 */
	if($('[role=iconpicker]').length)
	{
		require.css([config.asset_url + 'bootstrap-iconpicker/css/bootstrap-iconpicker.min.css']),
		require.js([config.asset_url + 'bootstrap-iconpicker/js/iconset/materialdesignicons.3.3.92.min.js', config.asset_url + 'bootstrap-iconpicker/js/bootstrap-iconpicker.min.js'], function()
		{
			$('[role=iconpicker]').iconpicker
			({
				searchText: (phrase.search ? phrase.search : 'Search')
			})
		})
	}
	
	/**
	 * fetch additional file if to initialize sortable
	 */
	if($('[role=sortable-menu]').length)
	{
		$('[role=sortable-menu]').each(function()
		{
			var _this								= $(this),
				maxDepth							= 10;
			require.css([config.asset_url + 'sortable/sortable.min.css']),
			require.js([config.asset_url + 'sortable/sortable.min.js'], function()
			{
				_this.sortable
				({
					maxDepth: maxDepth,
					selector: "ul",
					list: "li",
					onChange: function(e)
					{
						_this.next('.serialized_data').val(JSON.stringify(_this.sortableToHierarchy()))
					}
				})
				.on('click', '.item-add', function(e)
				{
					if($(this).parents('ul').length >= maxDepth) return;
					
					var new_item					= _this.find('li.item-placeholder').prop('outerHTML'),
						new_item					= new_item.replace('{{id}}', $(this).parents('ul').children('li').length),
						new_item					= new_item.replace(' item-placeholder hidden"', ''),
						new_item					= new_item.replace('aria-label="', 'title="');
					if($(this).hasClass('children'))
					{
						if($(this).closest('li').find('ul:first').length)
						{
							$(new_item).appendTo($(this).closest('li').find('ul:first'))
						}
						else
						{
							$('<ul>' + new_item + '</ul>').appendTo($(this).closest('li'))
						}
					}
					else
					{
						$(new_item).appendTo(_this)
					}
					
					$('[role=iconpicker]').iconpicker
					({
						searchText: (phrase.search ? phrase.search : 'Search')
					}),
					$('[data-bs-toggle=tooltip]').tooltip(),
					_this.trigger('change')
				})
				.on('click', '.item-remove', function(e)
				{
					e.preventDefault(),
					
					$(this).closest('li').slideToggle(200, function()
					{
						$(this).remove(),
						_this.trigger('change')
					});
				})
				.on('change', '.menu-icon', function()
				{
					var _icon						= $(this).find('i').attr('class');
					$(this).closest('li').attr('data-icon', _icon).parents(_this).trigger('change')
				})
				.on('change keyup', '.menu-label', function(e)
				{
					$(this).closest('li').attr('data-label', $(this).val()).parents(_this).trigger('change')
				})
				.on('change keyup', '.menu-slug', function()
				{
					$(this).closest('li').attr('data-slug', $(this).val()).parents(_this).trigger('change')
				})
				.on('click touch', '.menu-newtab', function()
				{
					$(this).closest('li').attr('data-newtab', ($(this).is(':checked') ? 1 : 0)).parents(_this).trigger('change')
				})
				.on('change', function(e)
				{
					_this.next('.serialized_data').val(JSON.stringify(_this.sortableToHierarchy()))
				});
			})
		})
	}
	
	/**
	 * sortable
	 */
	if($('[role=sortable]').length)
	{
		$('[role="sortable"]').each(function()
		{
			var _this								= $(this);
			require.css([config.asset_url + 'sortable/sortable.min.css']),
			require.js([config.asset_url + 'sortable/sortable.min.js'], function()
			{
				_this.sortable
				({
					maxDepth: 0,
					selector: (_this.attr('data-selector') ? _this.attr('data-selector') : 'ul'),
					list: (_this.attr('data-list') ? _this.attr('data-list') : 'li'),
					onChange: function(e)
					{
						return;
					}
				})
			})
		})
	}
	
	/**
	 * widgets
	 */
	if($('[role=widget]').length && !_self_ignore)
	{
		$('[role="widget"]').each(function()
		{
			$.ajax
			({
				url: $(this).attr('data-source'),
				context: this
			})
			.done(function(response)
			{
				if(typeof response.html !== 'undefined')
				{
					$(this).html(response.html)
				}
				
				_reactivate(true)
			})
		})
	}
	
	/**
	 * retrigger fetching parameter of API
	 */
	if($('.fetch-parameter').length)
	{
		$('.fetch-parameter').trigger('change')
	}
	
	/**
	 * reinitialize XFBML after ajax call
	 */
	if(XFBML)
	{
		XFBML.parse()
	}
	
	/**
	 * check parent item and open if it's link were active
	 */
	$('.sidebar-menu .nav-item.active').each(function()
	{
		$(this).parents('li').addClass('active is-parent'),
		$(this).parents('ul').addClass('show').prev('.nav-link').addClass('is-expanded')
	});
	/**
	 * retrigger the required event set from _retrigger.push(function(){})
	 */
	if(typeof _retrigger !== 'undefined' && _retrigger.length)
	{
		$.each(_retrigger, function(key, val)
		{
			if(typeof _retrigger[key] === 'function')
			{
				_retrigger[key].call()
			}
			else
			{
				_retrigger[key]
			}
		})
	}
};
